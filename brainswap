#!/bin/bash
# Stamp-IT brainswap  Copyright 2018 Stamp-IT Blockchain Solution inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
# associated documentation files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge, publish, distribute,
# sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or
# substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

source "$(dirname "${BASH_SOURCE[0]}")/brainswap.sh"

# Uncomment the following line to turn on debugging
#set -x

BRAINSWAP_VERSION="2.0-alpha2"

function usage() {
	echo "Stamp-IT Brainswap v$BRAINSWAP_VERSION Copyright 2018 Stamp-IT Blockchain Solution inc."
	echo
	echo "Uses OpenSSH to brainswap two factomd nodes."
	echo
	echo "Usage:"
	echo "       brainswap [--sudo] [--noswap] [user1@]node1[:port1] [user2@]node2[:port2]"
	echo
	echo "node1 MUST be an authority node"
	echo "node2 is usually not be an authority node"
	echo
	echo "Tip:"
	echo "   You can add a line in your factomd.conf to mark the place where the brainswap identity should be inserted."
	echo "   Just insert a line that reads (without quotation marks): \"; BRAINSWAP_ID_BELOW\""
	echo "   Otherwise the identity will be insert at the begining of [app] section"
	echo "Tip:"
	echo "   You can use a SSH jump box to connect to a node by prepending user@jumphost to the target node and separating them with comma"
	echo "   e.g.: brainswap user@jumphost,user@authoritynode user@jumphost,user@followernode"
}

NOSWAP=
ack_alpha=

while [ "$1" != "" ]; do
	case "$1" in
	"--help")
		usage
		exit 0
		;;
	"--sudo")
		sudo1="--sudo"
		sudo2="--sudo"
		;;
	"--sudo1")
		sudo1="--sudo"
		;;
	"--sudo2")
		sudo2="--sudo"
		;;
	"--noswap")
		NOSWAP=1
		;;
	"--ack-alpha")
		ack_alpha=1
		;;
	"--quiet")
		QUIET=1
		;;
	"--debug")
		set -x
		;;
	-*)
		echo "$0: Unknown parameter $1." >&2
		echo "$0 --help for help." >&2
		exit 2
		;;
	*)
		if [ -z "$node1" ]; then
			node1="$1"
		elif [ -z "$node2" ]; then
			node2="$1"
		else
			echo "$0: Too many parameters." >&2
			echo "$0 --help for help." >&2
			exit 2
		fi
		;;
	esac
	shift
done

[ "$QUIET" != 1 ] && echo "Stamp-IT Brainswap v$BRAINSWAP_VERSION for factomd" >&2

# Parameters looking good
if [ -z "$node1" -o -z "$node2" ]; then
	usage >&2
	exit 2
fi

# We do not want to brainswap a node with itself!
if [ "$node1" = "$node2" ]; then
	print_error_stack_exit "$node1 and $node2 are the same nodes, no brainswap needed."
fi

if [ "$ack_alpha" != "1" ]; then
	echo "This is an alpha version of brainswap. Do not use it on production nodes." >&2
	echo "Use option --ack-alpha if you are sure you want to use it." >&2
	exit 1
fi

#########
# Accessing node 1 to obtain and validate some informations...

[ "$QUIET" != 1 ] && echo "Accessing factomd config of $node1..." >&2
# Make sure config is writable before any modification si attempted
ensure_factomd_conf_writable $sudo1 $node1

brainswap_get_node1_conf

brainswap_ensure_identity_complete_node1

[ "$QUIET" != 1 ] && echo "Getting details from running factomd at $node1..." >&2
get_factomd_details $node1 node1

brainswap_ensure_authority_and_ready_node1

brainswap_ensure_process_list_complete_node1

brainswap_ensure_no_brainswap_pending_node1

brainswap_ensure_not_minute_0_node1

#########
# Accessing node 2 to obtain and validate some informations...

[ "$QUIET" != 1 ] && echo "Accessing factomd config of $node2..." >&2
# Make sure config is writable before any modification si attempted
ensure_factomd_conf_writable $sudo2 $node2

brainswap_get_node2_conf

brainswap_ensure_same_network

# Identity is optional for node2
brainswap_ensure_not_same_identity

[ "$QUIET" != 1 ] && echo "Getting details from running factomd at $node2..." >&2
get_factomd_details $node2 node2

brainswap_ensure_ready_node2

brainswap_ensure_process_list_complete_node2

brainswap_ensure_no_brainswap_pending_node2

brainswap_ensure_same_block_height

brainswap_ensure_same_minute

change_height=$(brainswap_calculate_safe_swap_height)
swap_wait=$(brainswap_calculate_swap_wait_minutes $change_height)

[ "$QUIET" != 1 ] && echo "Ready to brainswap at block height $change_height, in about $swap_wait minutes:" >&2

brainswap_simulate_brainswap $change_height

if [ "$NOSWAP" = "1" ]; then
	echo $0: "--noswap specified, not brainswapping."
	exit 0
fi

brainswap_do_brainswap $change_height

echo "Brainswap initiated successfully for block $change_height, in about $swap_wait minutes"

exit 0
