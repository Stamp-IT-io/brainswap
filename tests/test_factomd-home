#!/usr/bin/env run_bash_test

# You can change the following line to test whether a new version of Factomd is compatible with brainswap
FACTOMD_LATEST_TAG=v6.5.2-alpine
FACTOMD_LATEST_VERSION=${FACTOMD_LATEST_TAG%-alpine}

SELF_DIR="$(dirname "${BASH_SOURCE[0]}")"

source $SELF_DIR/../ssh.sh
source $SELF_DIR/../factomd-status.sh

if ! grep -q '^[[:space:]]*StrictHostKeyChecking no' ~/.ssh/config; then
	echo 'You should consider adding the following section to your ~/.ssh/config to avoid SSH trying to ask to accept new keys during the tests:' >&2
	echo 'Host localhost' >&2
	echo '	Hostname localhost' >&2
	echo '	StrictHostKeyChecking no' >&2

fi

# Tear down after the tests
function _on_exit() {
	docker stop test-mock-badver >/dev/null
	docker stop test-mock-notfound >/dev/null
	docker stop test-mock-dummy >/dev/null
	docker stop test-mock-632 >/dev/null
	docker stop test-mock-633rc >/dev/null
	docker stop test-factomd-632 >/dev/null
	docker stop test-factomd-632-ssh >/dev/null
	docker stop test-factomd-633rc >/dev/null
	docker stop test-factomd-633rc-ssh >/dev/null
	docker stop test-factomd-latest >/dev/null
	docker stop test-factomd-latest-ssh >/dev/null
}
trap _on_exit EXIT

# Setup for the following tests
docker run --rm -d --name "test-mock-badver" -p 2219:22 --mount type=bind,source=$(realpath $SELF_DIR)/volume-test-factomd-badver,target=/www,readonly alpine-httpd
docker run --rm -d --name "test-mock-notfound" -p 2220:22 --mount type=bind,source=$(realpath $SELF_DIR)/volume-test-factomd-notfound,target=/www,readonly alpine-httpd
docker run --rm -d --name "test-mock-dummy" -p 2221:22 --mount type=bind,source=$(realpath $SELF_DIR)/volume-test-factomd-dummy,target=/www,readonly alpine-httpd
docker run --rm -d --name "test-mock-632" -p 2222:22 --mount type=bind,source=$(realpath $SELF_DIR)/volume-test-factomd-632,target=/www,readonly alpine-httpd
docker run --rm -d --name "test-mock-633rc" -p 2223:22 --mount type=bind,source=$(realpath $SELF_DIR)/volume-test-factomd-633rc,target=/www,readonly alpine-httpd
# The two following containers share the same network namespace
docker run --rm -d --name "test-factomd-632-ssh" -p 2224:22 alpine-dropbear
docker run --rm -d --name "test-factomd-632" --network=container:test-factomd-632-ssh factominc/factomd:v6.3.2-alpine 
# The two following containers share the same network namespace
docker run --rm -d --name "test-factomd-633rc-ssh" -p 2225:22 alpine-dropbear
docker run --rm -d --name "test-factomd-633rc" --network=container:test-factomd-633rc-ssh factominc/factomd:v6.3.3-rc1-alpine 
# The two following containers share the same network namespace
docker run --rm -d --name "test-factomd-latest-ssh" -p 2226:22 alpine-dropbear
docker run --rm -d --name "test-factomd-latest" --network=container:test-factomd-latest-ssh factominc/factomd:$FACTOMD_LATEST_TAG

sleep 1	# Give a little bit of time for containers to complete their initialization

# Tests
function get_factomd_home_returns_true() {
        run_expect_error 0 get_factomd_home root@localhost:2222
        run_expect_error 0 get_factomd_home root@localhost:2223
        run_expect_error 0 get_factomd_home root@localhost:2224
        run_expect_error 0 get_factomd_home root@localhost:2225
        run_expect_error 0 get_factomd_home root@localhost:2226
}
get_factomd_home_returns_true

function get_factomd_version_output_ok() {
        run_expect_output "v6.3.2" get_factomd_version root@localhost:2222
        run_expect_output "v6.3.3-rc1" get_factomd_version root@localhost:2223
        run_expect_output "v6.3.2" get_factomd_version root@localhost:2224
        run_expect_output "v6.3.3-rc1" get_factomd_version root@localhost:2225
        run_expect_output "v6.5.2" get_factomd_version root@localhost:2226
}
get_factomd_version_output_ok

function get_factomd_home_returns_false() {
        run_expect_error 1 get_factomd_home root@localhost:2219
        run_expect_error 1 get_factomd_home root@localhost:2220
        run_expect_error 1 get_factomd_home root@localhost:2221
        run_expect_error 1 get_factomd_home root@localhost:2222 bad-prefix
}
get_factomd_home_returns_false

function get_factomd_version_returns_false() {
        run_expect_error 1 get_factomd_version root@localhost:2219
        run_expect_error 1 get_factomd_version root@localhost:2220
        run_expect_error 1 get_factomd_version root@localhost:2221
}
get_factomd_version_returns_false

function get_factomd_home_sets_variables_correctly_with_prefix() {
        get_factomd_home root@localhost:2222 prefixm632 </dev/null >/dev/null 2>/dev/null
	expect_error 0	# Cannot use run_expect_error because variables would not be set here (outside of subshell)

        get_factomd_home root@localhost:2223 prefixm633rc </dev/null >/dev/null 2>/dev/null
	expect_error 0	# Cannot use run_expect_error because variables would not be set here (outside of subshell)

        get_factomd_home root@localhost:2224 prefixf632 </dev/null >/dev/null 2>/dev/null
	expect_error 0	# Cannot use run_expect_error because variables would not be set here (outside of subshell)

        get_factomd_home root@localhost:2225 prefixf633rc </dev/null >/dev/null 2>/dev/null
	expect_error 0	# Cannot use run_expect_error because variables would not be set here (outside of subshell)

	get_factomd_home root@localhost:2226 prefixflatest </dev/null >/dev/null 2>/dev/null
	expect_error 0	# Cannot use run_expect_error because variables would not be set here (outside of subshell)

	run_expect_error 0 [ "$prefixm632_factomd_version" == "v6.3.2" ]
	run_expect_error 0 [ "$prefixm633rc_factomd_version" == "v6.3.3-rc1" ]
	run_expect_error 0 [ "$prefixf632_factomd_version" == "v6.3.2" ]
	run_expect_error 0 [ "$prefixf633rc_factomd_version" == "v6.3.3-rc1" ]
	run_expect_error 0 [ "$prefixflatest_factomd_version" == "$FACTOMD_LATEST_VERSION" ]
	run_expect_error 0 [ "$prefixm632_factomd_build" == "c429cbf87dd732ffaf95663fa2b5ab900e33e04d" ]
	run_expect_error 0 [ "$prefixm633rc_factomd_build" == "7fd7716f5af4f8962ef9390adb0f4e4416eb22da" ]
	run_expect_error 0 [ "$prefixf632_factomd_build" == "c429cbf87dd732ffaf95663fa2b5ab900e33e04d" ]
	run_expect_error 0 [ "$prefixf633rc_factomd_build" == "7fd7716f5af4f8962ef9390adb0f4e4416eb22da" ]
	run_expect_error 0 [ "${#prefixflatest_factomd_build}" = 40 ]
}
get_factomd_home_sets_variables_correctly_with_prefix

function get_factomd_home_sets_variables_correctly_without_prefix() {
        get_factomd_home root@localhost:2222 </dev/null >/dev/null 2>/dev/null
	expect_error 0	# Cannot use run_expect_error because variables would not be set here (outside of subshell)

	run_expect_error 0 [ "$_factomd_version" == "v6.3.2" ]
	run_expect_error 0 [ "$_factomd_build" == "c429cbf87dd732ffaf95663fa2b5ab900e33e04d" ]
}
get_factomd_home_sets_variables_correctly_without_prefix

